#ifndef _AKANE_SCREENH_
#define _AKANE_SCREENH_

#include "Akane_Settings.h"
#include <Adafruit_ILI9341.h>
#include "fonts/FreeSans6pt7b.h"
#include "fonts/RobotoLight6pt7b.h"
#include "fonts/RobotoLight7pt7b.h"
#include "fonts/RobotoLight10pt7b.h"
#include "fonts/RobotoLight12pt7b.h"
#include "fonts/RobotoLight16pt7b.h"
#include "fonts/RobotoLight17pt7b.h"

// http://www.barth-dev.de/online/rgb565-color-picker/

#define SCREEN_BGCOLOR 0x18E3 			/* HEX: #1e1e1e / RGB565: 0x18E3 */
#define SCREEN_FGCOLOR 0xFFFF			/* HEX: #FFFFFF / RGB565: 0xFFFF */
#define SCREEN_TITLECOLOR 0x4459 		/* HEX: #428bca / RGB565: 0x4459 */

#define SCREEN_WIFIACTIVATED 0xFFFF 	/* HEX: #FFFFFF / RGB565: 0xFFFF */ 
#define SCREEN_WIFIDEACTIVATED 0xF800 	/* HEX: #FF0000 / RGB565: 0xF800 */ 

#define SCREEN_RELAYACTIVATED 0x07EF 	/* HEX: #00FF00 / RGB565: 0x07EF */ 
#define SCREEN_RELAYDEACTIVATED 0xF800 	/* HEX: #FF0000 / RGB565: 0xF800 */ 

#define SCREEN_PANEL1_BGCOLOR 0x64CC	/* HEX: #629862 / RGB565: 0x64CC */
#define SCREEN_PANEL2_BGCOLOR 0x836E	/* HEX: #846d74 / RGB565: 0x836E */
#define SCREEN_PANEL3_BGCOLOR 0x4459	/* HEX: #428bca / RGB565: 0x4459 */
#define SCREEN_PANEL4_BGCOLOR 0xE461	/* HEX: #e28f09 / RGB565: 0xE461 */
#define SCREEN_PANEL5_BGCOLOR 0xAD40	/* HEX: #abaa01 / RGB565: 0xAD40 */

#define SCREEN_RELAY_FGHEATER 0x836E	/* HEX: #846d74 / RGB565: 0x836E */
#define SCREEN_RELAY_FGFAN 0x7A4B		/* HEX: #7e4a5a / RGB565: 0x7A4B */
#define SCREEN_RELAY_FGMISTING 0x0A2F	/* HEX: #09477c / RGB565: 0x0A2F */ 
#define SCREEN_RELAY_FGFOGGER 0x4459	/* HEX: #428bca / RGB565: 0x4459 */
#define SCREEN_RELAY_FGLIGHT 0xAD40		/* HEX: #abaa01 / RGB565: 0xAD40 */

static unsigned char temperature_bits[] = {
   0x00, 0x80, 0x07, 0x00, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0x00, 0x60,
   0x18, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x60, 0x30, 0x00,
   0x00, 0x00, 0x60, 0x30, 0x7e, 0x00, 0x00, 0x60, 0x30, 0x7e, 0x00, 0x00,
   0x60, 0x30, 0x00, 0x00, 0x00, 0x60, 0x30, 0x00, 0x00, 0x00, 0x60, 0x30,
   0x1e, 0x00, 0x00, 0x60, 0x30, 0x0e, 0x00, 0x00, 0x60, 0x30, 0x00, 0x00,
   0x00, 0x60, 0x30, 0x00, 0x00, 0x00, 0x60, 0x30, 0x7e, 0x00, 0x00, 0x60,
   0x30, 0x00, 0x00, 0x00, 0x60, 0x32, 0x00, 0x00, 0x00, 0x60, 0x33, 0x0e,
   0x00, 0x00, 0x60, 0x33, 0x1e, 0x00, 0x00, 0x60, 0x33, 0x00, 0x00, 0x00,
   0x60, 0x33, 0x00, 0x00, 0x00, 0x60, 0x33, 0x7e, 0x00, 0x00, 0x60, 0x33,
   0x7e, 0x00, 0x00, 0x60, 0x33, 0x00, 0x00, 0x00, 0x60, 0x33, 0x00, 0x00,
   0x00, 0x70, 0x33, 0x00, 0x00, 0x00, 0x38, 0x63, 0x00, 0x00, 0x00, 0x8c,
   0xcf, 0x00, 0x00, 0x00, 0x6c, 0x9e, 0x01, 0x00, 0x00, 0x26, 0xbe, 0x01,
   0x00, 0x00, 0x16, 0x3f, 0x03, 0x00, 0x00, 0x92, 0x7f, 0x03, 0x00, 0x00,
   0x92, 0x7f, 0x03, 0x00, 0x00, 0xf2, 0x7f, 0x03, 0x00, 0x00, 0xf6, 0x3f,
   0x03, 0x00, 0x00, 0xe6, 0xbf, 0x01, 0x00, 0x00, 0xcc, 0x9f, 0x01, 0x00,
   0x00, 0x9c, 0xc7, 0x00, 0x00, 0x00, 0x38, 0x70, 0x00, 0x00, 0x00, 0xf0,
   0x3f, 0x00, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00 };

static unsigned char drop_bits[] = {
   0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00,
   0x3c, 0x00, 0x00, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00, 0x00, 0xc3, 0x00,
   0x00, 0x00, 0x80, 0x81, 0x01, 0x00, 0x00, 0xc0, 0x81, 0x03, 0x00, 0x00,
   0xc0, 0x00, 0x03, 0x00, 0x00, 0x60, 0x00, 0x06, 0x00, 0x00, 0x30, 0x00,
   0x0c, 0x00, 0x00, 0x30, 0x00, 0x0c, 0x00, 0x00, 0x18, 0x00, 0x18, 0x00,
   0x00, 0x0c, 0x00, 0x30, 0x00, 0x00, 0x0c, 0x00, 0x30, 0x00, 0x00, 0x06,
   0x00, 0x60, 0x00, 0x00, 0x03, 0x00, 0xc0, 0x00, 0x00, 0x03, 0x00, 0xc0,
   0x00, 0x80, 0x01, 0x00, 0x80, 0x01, 0x80, 0x01, 0x00, 0x80, 0x01, 0xc0,
   0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x03, 0x40, 0x00, 0x00,
   0x00, 0x02, 0x60, 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x06,
   0x60, 0x00, 0x00, 0x00, 0x06, 0x60, 0x06, 0x00, 0x00, 0x06, 0x60, 0x06,
   0x00, 0x00, 0x06, 0x60, 0x06, 0x00, 0x00, 0x06, 0x60, 0x0c, 0x00, 0x00,
   0x06, 0xc0, 0x0c, 0x00, 0x00, 0x03, 0xc0, 0x18, 0x00, 0x00, 0x03, 0x80,
   0x38, 0x00, 0x00, 0x01, 0x80, 0x71, 0x00, 0x80, 0x01, 0x00, 0xe3, 0x01,
   0xc0, 0x00, 0x00, 0x87, 0x0f, 0xe0, 0x00, 0x00, 0x0e, 0x0e, 0x70, 0x00,
   0x00, 0x1c, 0x00, 0x38, 0x00, 0x00, 0xf0, 0x00, 0x0f, 0x00, 0x00, 0xc0,
   0xff, 0x03, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00 };

static unsigned char sun_bits[] = {
   0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00,
   0x18, 0x00, 0x00, 0x00, 0x0c, 0x18, 0x30, 0x00, 0x00, 0x0c, 0x18, 0x30,
   0x00, 0x00, 0x1c, 0x00, 0x38, 0x00, 0x00, 0x18, 0x00, 0x18, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x80, 0xff,
   0x01, 0x00, 0x38, 0xe0, 0xc3, 0x07, 0x1c, 0x78, 0x70, 0x00, 0x0e, 0x1e,
   0x60, 0x38, 0x00, 0x1c, 0x06, 0x00, 0x1c, 0x00, 0x38, 0x00, 0x00, 0x0c,
   0x00, 0x30, 0x00, 0x00, 0x06, 0x00, 0x60, 0x00, 0x00, 0x06, 0x00, 0x60,
   0x00, 0x00, 0x07, 0x00, 0xe0, 0x00, 0x00, 0x03, 0x00, 0xc0, 0x00, 0x1f,
   0x03, 0x00, 0xc0, 0xf8, 0x1f, 0x03, 0x00, 0xc0, 0xf8, 0x00, 0x03, 0x00,
   0xc0, 0x00, 0x00, 0x07, 0x00, 0xe0, 0x00, 0x00, 0x06, 0x00, 0x60, 0x00,
   0x00, 0x06, 0x00, 0x60, 0x00, 0x00, 0x0c, 0x00, 0x30, 0x00, 0x00, 0x1c,
   0x00, 0x38, 0x00, 0x60, 0x38, 0x00, 0x1c, 0x06, 0x78, 0x70, 0x00, 0x0e,
   0x1e, 0x38, 0xe0, 0xc3, 0x07, 0x1c, 0x00, 0x80, 0xff, 0x01, 0x00, 0x00,
   0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00,
   0x18, 0x00, 0x00, 0x1c, 0x00, 0x38, 0x00, 0x00, 0x0c, 0x18, 0x30, 0x00,
   0x00, 0x0c, 0x18, 0x30, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00,
   0x18, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00 };

static unsigned char water_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc0, 0x81, 0x03, 0x06,
   0xf8, 0xf1, 0xc3, 0x8f, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0x3f,
   0xff, 0xfc, 0xf9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc0, 0x81, 0x03, 0x06, 0xf8,
   0xf1, 0xe7, 0x8f, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0x3f, 0x7e,
   0xfc, 0xf9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xc0, 0x81, 0x03, 0x0e, 0xf8, 0xf1,
   0xe7, 0x8f, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0x3f, 0x7e, 0xfc,
   0xf9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };

static unsigned char days_bits[] = {
   0x00, 0x0e, 0x00, 0x70, 0x00, 0x00, 0x1f, 0x00, 0xf8, 0x00, 0x80, 0x1f,
   0x00, 0xf8, 0x01, 0x80, 0x1f, 0x00, 0xf8, 0x01, 0x80, 0x1f, 0x00, 0xf8,
   0x01, 0xbf, 0xdf, 0xff, 0xfb, 0xfd, 0x3f, 0xdf, 0xff, 0xfb, 0xfc, 0x3f,
   0xcf, 0xff, 0xf3, 0xfc, 0x7f, 0xc0, 0xff, 0x03, 0xfe, 0xff, 0xe0, 0xff,
   0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0x07, 0x00, 0x00, 0x00, 0xe0, 0x07, 0x00, 0x00, 0x00,
   0xe0, 0x07, 0x00, 0x00, 0x00, 0xe0, 0x07, 0xc0, 0xc7, 0xf3, 0xe1, 0x07,
   0xc0, 0xc7, 0xf3, 0xe1, 0x07, 0xc0, 0xc7, 0xf3, 0xe1, 0x07, 0x80, 0xc3,
   0xe3, 0xe0, 0x07, 0x00, 0x00, 0x00, 0xe0, 0x07, 0x00, 0x00, 0x00, 0xe0,
   0x87, 0xcf, 0xc7, 0xf3, 0xe1, 0x87, 0xcf, 0xc7, 0xf3, 0xe1, 0x87, 0xcf,
   0xc7, 0xf3, 0xe1, 0x87, 0xcf, 0xc7, 0xf3, 0xe1, 0x07, 0x00, 0x00, 0x00,
   0xe0, 0x07, 0x00, 0x00, 0x00, 0xe0, 0x07, 0x00, 0x00, 0x00, 0xe0, 0x87,
   0xcf, 0xc7, 0xf3, 0xe1, 0x87, 0xcf, 0xc7, 0xf3, 0xe1, 0x87, 0xcf, 0xc7,
   0xf3, 0xe1, 0x07, 0x8f, 0xc7, 0xf3, 0xe0, 0x07, 0x00, 0x00, 0x00, 0xe0,
   0x07, 0x00, 0x00, 0x00, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff };
   
static unsigned char switch_bg_off_bits[] = {
   0xff, 0xff, 0x00, 0xfc, 0xff, 0x03, 0xf8, 0xff, 0x07, 0xf0, 0xff, 0x0f,
   0x00, 0xc0, 0x1f, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x3e,
   0x00, 0x00, 0x3c, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x3c,
   0x00, 0x00, 0x3e, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x1f, 0x00, 0x80, 0x1f,
   0xf0, 0xff, 0x0f, 0xf8, 0xff, 0x0f, 0xfc, 0xff, 0x03, 0xff, 0xff, 0x01 };

static unsigned char switch_bg_on_bits[] = {
   0xe0, 0xff, 0x3f, 0xf0, 0xff, 0x0f, 0xfc, 0xff, 0x07, 0xfc, 0xff, 0x03,
   0x7e, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x1f, 0x00, 0x00,
   0x0f, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x0f, 0x00, 0x00,
   0x1f, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x3e, 0x00, 0x00, 0xfe, 0x00, 0x00,
   0xfc, 0xff, 0x03, 0xf8, 0xff, 0x07, 0xf0, 0xff, 0x3f, 0xc0, 0xff, 0x3f };

static unsigned char switch_btn_bits[] = {
   0x00, 0x0f, 0x00, 0xe0, 0x7f, 0x00, 0xf0, 0xff, 0x00, 0xf8, 0xff, 0x01,
   0xfc, 0xff, 0x03, 0xfe, 0xf0, 0x07, 0x3e, 0xc0, 0x07, 0x3e, 0xc0, 0x07,
   0x1f, 0x80, 0x0f, 0x1f, 0x80, 0x0f, 0x1f, 0x80, 0x0f, 0x1f, 0x80, 0x0f,
   0x3e, 0xc0, 0x07, 0x3e, 0xc0, 0x07, 0xfe, 0xf0, 0x07, 0xfc, 0xff, 0x03,
   0xf8, 0xff, 0x01, 0xf0, 0xff, 0x00, 0xe0, 0x7f, 0x00, 0x00, 0x0f, 0x00 };

class Akane_Screen {
  private:
    Adafruit_ILI9341* tft;

    float prev_temp;
    float prev_hum;
    float prev_waterlevel;
    float prev_light;

  public:
    static Akane_Screen& getInstance() {
        static Akane_Screen instance; // Guaranteed to be destroyed.
                                      // Instantiated on first use.
        return instance;
    }
    Akane_Screen();

  private:
    Akane_Screen(Akane_Screen const&);   // Don't Implement
    void operator=(Akane_Screen const&); // Don't implement

    bool wifi_ap_displayed;
	  String ip_address_1;
	  String ip_address_2;

  public:
    void initialize();
    void draw_panel(uint16_t bgcolor, int16_t x, int16_t y, int16_t w, int16_t h);
    
	  void print_str(const String &txt, unsigned int size, unsigned int x, unsigned int y);
	  void print_str(const String &txt, unsigned int size, unsigned int x, unsigned int y, bool newline);
    void print_str(const String &txt, unsigned int size, bool newline);
    void print_str(unsigned int bg_color, String prev_str, unsigned int fg_color, String str, unsigned int size, unsigned int x, unsigned int y);
    void print_str(unsigned int bg_color, String prev_str, unsigned int fg_color, String str, unsigned int size, unsigned int x, unsigned int y, bool newline);
	
    void display_wifi_status(bool is_connected, String ip_address, String prev_ip_address);
    void display_wifi_ap_status(String ip_address);

    void display_temperature(float temp);
    void display_temperature(float temp, float prev_temp);
    void display_humidity(float hum);
    void display_humidity(float hum, float prev_hum);
    void display_waterlevel(float level);
    void display_waterlevel(float level, float prev_level);
    void display_light(float light);
	  void display_light(float light, float prev_light);
	
    void update_heater_status(bool is_active);
    void update_heater_info(float val);
    void update_fan_status(bool is_active);
    void update_fan_info(float val);
    void update_misting_status(bool is_active);
    void update_misting_info(float val);
	  void update_fogger_status(bool is_active);
	  void update_light_status(bool is_active);
	
	  void update_date(short year, short month, short day, short prev_year, short prev_month, short prev_day);
    void update_time(short hour, short minute, short second, short prev_hour, short prev_minute, short prev_second);
    
  private:
	  void display_ip_addresses(String ip_address1, String ip_address2);
    String get_month(short month);
    void update_relay_status(bool is_active, unsigned int x, unsigned int y, unsigned int color);
};

#endif
